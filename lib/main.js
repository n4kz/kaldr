// Generated by CoffeeScript 1.4.0
(function() {
  var Crixalis, argv, frame, optimist, server;

  argv = (optimist = require('optimist'))["default"]('port', 8080).boolean(['help', 'version']).usage(['Usage:', '    kaldr [--port <number>]'].join('\n')).describe({
    version: 'Show version and exit',
    help: 'Show help and exit',
    port: 'Use specified port'
  }).argv;

  if (argv.help) {
    optimist.showHelp();
    process.exit();
  }

  if (argv.version) {
    console.log('0.0.1');
    process.exit();
  }

  (Crixalis = require('crixalis')).plugin('compression').router({
    url: '/kaldr.log',
    methods: ['GET', 'HEAD']
  }).to(function() {
    if (this.cookies.message) {
      console.log(decodeURIComponent(this.cookies.message));
    }
    return this.code = 204;
  }).set({
    url: '/kaldr.frame'
  }).to(function() {
    return this.body = frame;
  });

  Crixalis.on('auto', function() {
    this.headers['Connection'] = 'close';
    return this.select();
  });

  Crixalis.on('default', function() {
    if (this.is_head || this.is_get) {
      this.code = 404;
      return this.body = 'Not Found';
    } else {
      this.code = 405;
      this.body = 'Not allowed';
      return this.headers['Allowed'] = 'GET, HEAD';
    }
  });

  frame = "<!DOCTYPE html><script>(function (_, $) {\n	window.onhashchange = function () {\n		var data = _.hash.replace(/^#/, '')\n\n		if (data) {\n			$.cookie = 'message=' + encodeURIComponent(data)\n			Image().src = _.href.replace(/frame.*$/, 'log')\n			$.cookie = 'message=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'\n			_.hash = ''\n		}\n	}\n}(location, document))</script>".replace(/\t+/g, '');

  server = require('http').createServer(Crixalis.handler).listen(argv.port).on('close', process.exit);

  server.maxConnections = 512;

  process.on('SIGINT', server.close.bind(server));

}).call(this);
